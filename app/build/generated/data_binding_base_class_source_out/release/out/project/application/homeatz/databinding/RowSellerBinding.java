// Generated by view binder compiler. Do not edit!
package project.application.homeatz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import project.application.homeatz.R;

public final class RowSellerBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView ivstoreImg;

  @NonNull
  public final LinearLayout lay1;

  @NonNull
  public final RelativeLayout rl;

  @NonNull
  public final CardView sellerCv;

  @NonNull
  public final TextView tvStoreAddress;

  @NonNull
  public final TextView tvStoreName;

  @NonNull
  public final TextView tvStoreRating;

  private RowSellerBinding(@NonNull CardView rootView, @NonNull ImageView ivstoreImg,
      @NonNull LinearLayout lay1, @NonNull RelativeLayout rl, @NonNull CardView sellerCv,
      @NonNull TextView tvStoreAddress, @NonNull TextView tvStoreName,
      @NonNull TextView tvStoreRating) {
    this.rootView = rootView;
    this.ivstoreImg = ivstoreImg;
    this.lay1 = lay1;
    this.rl = rl;
    this.sellerCv = sellerCv;
    this.tvStoreAddress = tvStoreAddress;
    this.tvStoreName = tvStoreName;
    this.tvStoreRating = tvStoreRating;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RowSellerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowSellerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_seller, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowSellerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivstoreImg;
      ImageView ivstoreImg = ViewBindings.findChildViewById(rootView, id);
      if (ivstoreImg == null) {
        break missingId;
      }

      id = R.id.lay_1;
      LinearLayout lay1 = ViewBindings.findChildViewById(rootView, id);
      if (lay1 == null) {
        break missingId;
      }

      id = R.id.rl;
      RelativeLayout rl = ViewBindings.findChildViewById(rootView, id);
      if (rl == null) {
        break missingId;
      }

      CardView sellerCv = (CardView) rootView;

      id = R.id.tvStoreAddress;
      TextView tvStoreAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvStoreAddress == null) {
        break missingId;
      }

      id = R.id.tvStoreName;
      TextView tvStoreName = ViewBindings.findChildViewById(rootView, id);
      if (tvStoreName == null) {
        break missingId;
      }

      id = R.id.tvStoreRating;
      TextView tvStoreRating = ViewBindings.findChildViewById(rootView, id);
      if (tvStoreRating == null) {
        break missingId;
      }

      return new RowSellerBinding((CardView) rootView, ivstoreImg, lay1, rl, sellerCv,
          tvStoreAddress, tvStoreName, tvStoreRating);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
