// Generated by view binder compiler. Do not edit!
package project.application.homeatz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import project.application.homeatz.R;

public final class RowAddressBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout addressCv;

  @NonNull
  public final TextView addressTv;

  @NonNull
  public final TextView addresslabelTv;

  @NonNull
  public final TextView deleteAddressTv;

  @NonNull
  public final TextView phoneTv;

  @NonNull
  public final TextView pinCodeTv;

  private RowAddressBinding(@NonNull CardView rootView, @NonNull LinearLayout addressCv,
      @NonNull TextView addressTv, @NonNull TextView addresslabelTv,
      @NonNull TextView deleteAddressTv, @NonNull TextView phoneTv, @NonNull TextView pinCodeTv) {
    this.rootView = rootView;
    this.addressCv = addressCv;
    this.addressTv = addressTv;
    this.addresslabelTv = addresslabelTv;
    this.deleteAddressTv = deleteAddressTv;
    this.phoneTv = phoneTv;
    this.pinCodeTv = pinCodeTv;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RowAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address_cv;
      LinearLayout addressCv = ViewBindings.findChildViewById(rootView, id);
      if (addressCv == null) {
        break missingId;
      }

      id = R.id.address_tv;
      TextView addressTv = ViewBindings.findChildViewById(rootView, id);
      if (addressTv == null) {
        break missingId;
      }

      id = R.id.addresslabel_tv;
      TextView addresslabelTv = ViewBindings.findChildViewById(rootView, id);
      if (addresslabelTv == null) {
        break missingId;
      }

      id = R.id.deleteAddress_tv;
      TextView deleteAddressTv = ViewBindings.findChildViewById(rootView, id);
      if (deleteAddressTv == null) {
        break missingId;
      }

      id = R.id.phone_tv;
      TextView phoneTv = ViewBindings.findChildViewById(rootView, id);
      if (phoneTv == null) {
        break missingId;
      }

      id = R.id.pinCode_tv;
      TextView pinCodeTv = ViewBindings.findChildViewById(rootView, id);
      if (pinCodeTv == null) {
        break missingId;
      }

      return new RowAddressBinding((CardView) rootView, addressCv, addressTv, addresslabelTv,
          deleteAddressTv, phoneTv, pinCodeTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
