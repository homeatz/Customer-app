// Generated by view binder compiler. Do not edit!
package project.application.homeatz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import project.application.homeatz.R;

public final class FragmentAccountBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout activeOrderLayout;

  @NonNull
  public final RecyclerView activeOrderListRv;

  @NonNull
  public final TextView editTv;

  @NonNull
  public final TextView etEmail;

  @NonNull
  public final TextView etMobileNo;

  @NonNull
  public final LinearLayout helpLayout;

  @NonNull
  public final LinearLayout loggedInLayout;

  @NonNull
  public final LinearLayout loggedOutLayout;

  @NonNull
  public final Button loginTv;

  @NonNull
  public final ImageView myAccountIv;

  @NonNull
  public final LinearLayout myAccountLl;

  @NonNull
  public final LinearLayout myAddressLl;

  @NonNull
  public final LinearLayout myPointsLl;

  @NonNull
  public final TextView noSubsTv;

  @NonNull
  public final RecyclerView orderListRv;

  @NonNull
  public final LinearLayout pastOrderLayout;

  @NonNull
  public final RecyclerView subsListRv;

  @NonNull
  public final LinearLayout subscriptionLayout;

  @NonNull
  public final TextView userNameEdt;

  @NonNull
  public final TextView viewMoreTv;

  private FragmentAccountBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout activeOrderLayout, @NonNull RecyclerView activeOrderListRv,
      @NonNull TextView editTv, @NonNull TextView etEmail, @NonNull TextView etMobileNo,
      @NonNull LinearLayout helpLayout, @NonNull LinearLayout loggedInLayout,
      @NonNull LinearLayout loggedOutLayout, @NonNull Button loginTv,
      @NonNull ImageView myAccountIv, @NonNull LinearLayout myAccountLl,
      @NonNull LinearLayout myAddressLl, @NonNull LinearLayout myPointsLl,
      @NonNull TextView noSubsTv, @NonNull RecyclerView orderListRv,
      @NonNull LinearLayout pastOrderLayout, @NonNull RecyclerView subsListRv,
      @NonNull LinearLayout subscriptionLayout, @NonNull TextView userNameEdt,
      @NonNull TextView viewMoreTv) {
    this.rootView = rootView;
    this.activeOrderLayout = activeOrderLayout;
    this.activeOrderListRv = activeOrderListRv;
    this.editTv = editTv;
    this.etEmail = etEmail;
    this.etMobileNo = etMobileNo;
    this.helpLayout = helpLayout;
    this.loggedInLayout = loggedInLayout;
    this.loggedOutLayout = loggedOutLayout;
    this.loginTv = loginTv;
    this.myAccountIv = myAccountIv;
    this.myAccountLl = myAccountLl;
    this.myAddressLl = myAddressLl;
    this.myPointsLl = myPointsLl;
    this.noSubsTv = noSubsTv;
    this.orderListRv = orderListRv;
    this.pastOrderLayout = pastOrderLayout;
    this.subsListRv = subsListRv;
    this.subscriptionLayout = subscriptionLayout;
    this.userNameEdt = userNameEdt;
    this.viewMoreTv = viewMoreTv;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.active_order_layout;
      LinearLayout activeOrderLayout = ViewBindings.findChildViewById(rootView, id);
      if (activeOrderLayout == null) {
        break missingId;
      }

      id = R.id.active_order_list_rv;
      RecyclerView activeOrderListRv = ViewBindings.findChildViewById(rootView, id);
      if (activeOrderListRv == null) {
        break missingId;
      }

      id = R.id.edit_tv;
      TextView editTv = ViewBindings.findChildViewById(rootView, id);
      if (editTv == null) {
        break missingId;
      }

      id = R.id.et_email;
      TextView etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.et_mobileNo;
      TextView etMobileNo = ViewBindings.findChildViewById(rootView, id);
      if (etMobileNo == null) {
        break missingId;
      }

      id = R.id.helpLayout;
      LinearLayout helpLayout = ViewBindings.findChildViewById(rootView, id);
      if (helpLayout == null) {
        break missingId;
      }

      id = R.id.logged_in_layout;
      LinearLayout loggedInLayout = ViewBindings.findChildViewById(rootView, id);
      if (loggedInLayout == null) {
        break missingId;
      }

      id = R.id.logged_out_layout;
      LinearLayout loggedOutLayout = ViewBindings.findChildViewById(rootView, id);
      if (loggedOutLayout == null) {
        break missingId;
      }

      id = R.id.login_tv;
      Button loginTv = ViewBindings.findChildViewById(rootView, id);
      if (loginTv == null) {
        break missingId;
      }

      id = R.id.myAccount_iv;
      ImageView myAccountIv = ViewBindings.findChildViewById(rootView, id);
      if (myAccountIv == null) {
        break missingId;
      }

      id = R.id.myAccount_ll;
      LinearLayout myAccountLl = ViewBindings.findChildViewById(rootView, id);
      if (myAccountLl == null) {
        break missingId;
      }

      id = R.id.myAddress_ll;
      LinearLayout myAddressLl = ViewBindings.findChildViewById(rootView, id);
      if (myAddressLl == null) {
        break missingId;
      }

      id = R.id.myPoints_ll;
      LinearLayout myPointsLl = ViewBindings.findChildViewById(rootView, id);
      if (myPointsLl == null) {
        break missingId;
      }

      id = R.id.noSubsTv;
      TextView noSubsTv = ViewBindings.findChildViewById(rootView, id);
      if (noSubsTv == null) {
        break missingId;
      }

      id = R.id.order_list_rv;
      RecyclerView orderListRv = ViewBindings.findChildViewById(rootView, id);
      if (orderListRv == null) {
        break missingId;
      }

      id = R.id.past_order_layout;
      LinearLayout pastOrderLayout = ViewBindings.findChildViewById(rootView, id);
      if (pastOrderLayout == null) {
        break missingId;
      }

      id = R.id.subs_list_rv;
      RecyclerView subsListRv = ViewBindings.findChildViewById(rootView, id);
      if (subsListRv == null) {
        break missingId;
      }

      id = R.id.subscription_layout;
      LinearLayout subscriptionLayout = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionLayout == null) {
        break missingId;
      }

      id = R.id.userName_edt;
      TextView userNameEdt = ViewBindings.findChildViewById(rootView, id);
      if (userNameEdt == null) {
        break missingId;
      }

      id = R.id.view_more_tv;
      TextView viewMoreTv = ViewBindings.findChildViewById(rootView, id);
      if (viewMoreTv == null) {
        break missingId;
      }

      return new FragmentAccountBinding((LinearLayout) rootView, activeOrderLayout,
          activeOrderListRv, editTv, etEmail, etMobileNo, helpLayout, loggedInLayout,
          loggedOutLayout, loginTv, myAccountIv, myAccountLl, myAddressLl, myPointsLl, noSubsTv,
          orderListRv, pastOrderLayout, subsListRv, subscriptionLayout, userNameEdt, viewMoreTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
