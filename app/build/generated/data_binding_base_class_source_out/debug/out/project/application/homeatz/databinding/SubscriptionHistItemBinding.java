// Generated by view binder compiler. Do not edit!
package project.application.homeatz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import project.application.homeatz.R;

public final class SubscriptionHistItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView activeStatusTv;

  @NonNull
  public final TextView amountTv;

  @NonNull
  public final Button deleteBtn;

  @NonNull
  public final LinearLayout itemLayout;

  @NonNull
  public final Button payBtn;

  @NonNull
  public final TextView subsIdTv;

  private SubscriptionHistItemBinding(@NonNull LinearLayout rootView,
      @NonNull TextView activeStatusTv, @NonNull TextView amountTv, @NonNull Button deleteBtn,
      @NonNull LinearLayout itemLayout, @NonNull Button payBtn, @NonNull TextView subsIdTv) {
    this.rootView = rootView;
    this.activeStatusTv = activeStatusTv;
    this.amountTv = amountTv;
    this.deleteBtn = deleteBtn;
    this.itemLayout = itemLayout;
    this.payBtn = payBtn;
    this.subsIdTv = subsIdTv;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SubscriptionHistItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SubscriptionHistItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.subscription_hist_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SubscriptionHistItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.active_status_tv;
      TextView activeStatusTv = ViewBindings.findChildViewById(rootView, id);
      if (activeStatusTv == null) {
        break missingId;
      }

      id = R.id.amount_tv;
      TextView amountTv = ViewBindings.findChildViewById(rootView, id);
      if (amountTv == null) {
        break missingId;
      }

      id = R.id.deleteBtn;
      Button deleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtn == null) {
        break missingId;
      }

      id = R.id.item_layout;
      LinearLayout itemLayout = ViewBindings.findChildViewById(rootView, id);
      if (itemLayout == null) {
        break missingId;
      }

      id = R.id.payBtn;
      Button payBtn = ViewBindings.findChildViewById(rootView, id);
      if (payBtn == null) {
        break missingId;
      }

      id = R.id.subs_id_tv;
      TextView subsIdTv = ViewBindings.findChildViewById(rootView, id);
      if (subsIdTv == null) {
        break missingId;
      }

      return new SubscriptionHistItemBinding((LinearLayout) rootView, activeStatusTv, amountTv,
          deleteBtn, itemLayout, payBtn, subsIdTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
